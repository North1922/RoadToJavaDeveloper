package com.javarush.task.task10.task1016;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

/* 
Одинаковые слова в списке
*/

public class Solution {
    public static void main(String[] args) throws Exception {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));

        ArrayList<String> words = new ArrayList<String>();
        for (int i = 0; i < 20; i++) {
            words.add(reader.readLine());
        }

        Map<String, Integer> map = countWords(words);

        for (Map.Entry<String, Integer> pair : map.entrySet()) {
            System.out.println(pair.getKey() + " " + pair.getValue());
        }
    }

    public static Map<String, Integer> countWords(ArrayList<String> list) {
        HashMap<String, Integer> result = new HashMap<String, Integer>();
/*
 Посчитаем сколько раз встречаются одинаковые слова с помощью цикла
 */
        for (int i = 0; i < list.size(); i++) {//цикл выбирает элемент с которым будем сравнивать остальные жлементы
            int count = 0;
            for (int j = 0; j < list.size(); j++) {//создаём вложенный цикл с помощью которого сравниваем оставшиеся элементы с выбранным элементом в первом цикле
                if(list.get(i).equals(list.get(j))){//если элемент из первого цикла оказывается равным элементу вложенного цикла
                    count++;//увеличиваем переменную count на 1
                }
            }

        result.put(list.get(i), count);//добавляем в мапу где ключ уникальное слово , за значение число раз сколько данное слово повторяется.

        }

        return result;
    }
/* Другой вариант решения задачи


public static Map<String, Integer> countWords(ArrayList<String> list) {
        HashMap<String, Integer> result = new HashMap<>();

        for (String word : list) {
            int count = result.getOrDefault(word, 0);
            result.put(word, count + 1);
        }


 Метод getOrDerault() делает ровно то, что следует из названия,
  а именно, возвращает значение по ключу, если этот ключ есть в мапе, или дефолтное значение, что Вы сами попросили его вернуть.

        return result;
    }

 */
}
